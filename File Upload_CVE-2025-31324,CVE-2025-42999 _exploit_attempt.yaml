title: CVE-2025-31324//CVE-2025-42999  unauthenticated file upload vulnerability
id: 27e57490-53b7-4dda-b838-48e7216eadef
status: test
description: CVE-2025-31324 is an unauthenticated file upload vulnerability affecting the Metadata Uploader component of SAP NetWeaver Visual Composer. Successful exploitation of this vulnerability could allow an unauthenticated attacker to upload malicious files which can be used by an attacker to achieve code execution. The flaw is the result of missing authorization checks to the “/developmentserver/metadatauploader” endpoint.
references:
   - https://www.tenable.com/blog/cve-2025-31324-zero-day-vulnerability-in-sap-netweaver-exploited-in-the-wild
   - https://onapsis.com/blog/active-exploitation-of-sap-vulnerability-cve-2025-31324/
   - https://github.com/Onapsis/Onapsis-Mandiant-CVE-2025-31324-Vuln-Compromise-Assessment
author: Subhankar H.
date: 2025-05-17
modified: na
tags:
    - T1190 (Exploit Public-Facing Application)
    - T1505.003 (Server Software Component: Web Shell) 
    - CWE-434
    - CAPEC-1 Accessing Functionality Not Properly Constrained by ACLs
logsource:
    product: SAP
    category: Authorization
detection:
    selection:

        SUSPICIOUS_GLOB: 
            - 'f"{SAP_JAVA_APP_PATH}/irj/servlet_jsp/irj/root/*"'
            - 'f"{SAP_JAVA_APP_PATH}/irj/servlet_jsp/irj/work/*"'
            - 'f"{SAP_JAVA_APP_PATH}/irj/servlet_jsp/irj/work/sync/*"'

        SUSPICIOUS_EXT:
            - '.jsp' 
            - '.java'
            - '.class'
            - '.war'    

        KNOWN_IOC_NAMES:
            - "helper.jsp"       # Observed in multiple reports related to CVE-2025-31324
            - "cache.jsp"        # Observed in reports related to CVE-2025-31324
            - "forwardsap.jsp"
            - "coresap.jsp"
            - "webhelp.jsp"
            - ".webhelper.jsp"   # Hidden file variant
            - "usage.jsp"       # Possibly a renamed helper.jsp
            - "404_error.jsp"    # Potentially a disguised webshell
            -  ".h.jsp"          # Hidden file variant
            - "rrr141.jsp"
            - "rrxx1.jsp"
            - "rrxx.jsp"
            - "rrrx141.js"
            - "rrr232.jsp"
            - "rrr142.jsp"

        LOG_PATH_GLOB:  f'{SAP_JAVA_BASE_PATH}/*/log/system/httpaccess/'
        LOG_FILES_GLOB: 'responses*.trc*''

        LOG_PATTERN_SAP: re.compile(r'\[(?P<date>.*?)\]\s-\s(?P<ip>\S+)\s:\s(?P<method>\S+)\s(?P<resource>\S+)\s*(?P<protocol>\S+)\s(?P<status_code>\d{3})\s(?P<size>\d+)\s*(?P<extra>\.*?)'

        LOG_PATTERN_CLF: re.compile(r'(?P<ip>\S+)\s(?P<rfc931>\S+)\s(?P<authuser>\S+)\s\[(?P<date>.*?)\]\s"(?P<method>\S+)\s(?P<resource>\S+)\s*(?P<protocol>\S+)?"\s(?P<status_code>\d{3})\s(?P<size>\d+)\s*(?P<extra>.*)?'
   
        LOG_COLUMNS:  '"date", "ip", "method", "resource", "status_code", "size", "extra", "filename"'
 
        LOG_RULES:
            - lambda log_entry, context:
                    - '"exploit" if log_entry["path"].lower() == "/developmentserver/metadatauploader" and
                                   log_entry["params"].get("CONTENTTYPE", "").upper() == "MODEL" and
                                   log_entry["params"].get("CLIENT", "").upper() == "1" and
                                   log_entry["method"] in ("POST", "GET", "HEAD") else None'
            - lambda log_entry, context:
                    - '"webshell" if log_entry["path"].startswith("/irj/") and
                                     log_entry["path"].endswith(context["webshells"]) and
                                     log_entry["status_code"] == 200 else None'
            -  lambda log_entry, context:
                    - '"webshell" if fnmatch(log_entry["path"], "/irj/*.jsp") else None'


        TRACE_PATH_GLOB: f'{SAP_JAVA_BASE_PATH}/*/log/'
        TRACE_FILES_GLOB: 'defaultTrace*.trc*'

        TRACE_COLUMNS: '"date", "severity", "category", "log_id", "application", "location", "user", "session", "transaction", "thread", "log_type", "message", "result", "filename"'

        TRACE_PATTERN_V2: re.compile(
            - r"#(?P<version>[^#]*)#"
            - r"(?P<date>[^#]*)#"
            - r"(?P<timezone>[^#]*)#"
            - r"(?P<severity>[^#]*)#"
            - r"(?P<category>[^#]*)#"
            - r"([^#]*)#"
            - r"([^#]*)#"
            - r"([^#]*)#"
            - r"(?P<log_id>[^#]*)#"
            - r"([^#]*)#"
            - r"(?P<application>[^#]*)#"
            - r"(?P<location>[^#]*)#"
            - r"(?P<user>[^#]*)#"
            - r"(?P<session>[^#]*)#"
            - r"(?P<transaction>[^#]*)#"
            - r"([^#]*)#"
            - r"([^#]*)#"
            - r"([^#]*)#"
            - r"([^#]*)#"
            - r"(?P<thread>[^#]*)#"
            - r"(?P<log_type>[^#]*)#"
            - r"([^#]*)#"
            - r"(?P<message>.*)#$",
            - re.DOTALL  # Enable matching across multiple lines
    

        TRACE_RULES:
            - lambda event:  event['location'] == "com.sap.ds.helpers.MetadataUploader" and
                             event['severity'] == "Error" and
                            "devserver_metadataupload_ear" in event['application'].lower() and 
                            "getoutputproperties" in event['message'].lower()'           


      

    condition: selection 
falsepositives:
    - While the SAP Visual Composer component is an optional component to install, Onapsis research indicates this component is installed and enabled in at least 50% of Java systems, with the research indicating the percentage could be as high as 70%
level: critical